name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install opencv-python numpy pyautogui Pillow keyboard pywin32 pyperclip
        pip install ruff pytest pytest-cov black isort mypy pylint

    - name: Lint with ruff
      run: ruff check .

    - name: Format check with ruff
      run: ruff format --check .

    - name: Lint with flake8
      run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Type check with mypy
      run: mypy kiro_auto_recovery.py kiro_setup.py

    - name: Test with pytest
      run: pytest tests/ --cov=. --cov-report=xml --cov-report=html

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  code-quality:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install opencv-python numpy pyautogui Pillow keyboard pywin32 pyperclip
        pip install ruff pytest pytest-cov black isort mypy pylint

    - name: Check code formatting with black
      run: black --check .

    - name: Check import sorting with isort
      run: isort --check-only .

    - name: Lint with pylint
      run: pylint kiro_auto_recovery.py kiro_setup.py