name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        pip install pyinstaller

    - name: Check documentation consistency
      run: |
        echo "ドキュメント整合性チェック開始"

        # バージョン整合性チェック
        $tag = "${{ github.ref_name }}"
        $version = $tag -replace '^v', ''
        echo "リリースバージョン: $version"

        # pyproject.tomlのバージョンチェック
        $pyproject_version = (Get-Content pyproject.toml | Select-String 'version = "(.+)"').Matches[0].Groups[1].Value
        if ($pyproject_version -ne $version) {
          echo "エラー: pyproject.tomlのバージョン($pyproject_version)がタグ($version)と一致しません"
          exit 1
        }

        # 必須ドキュメントファイルの存在チェック
        $required_docs = @("README.md", "FEATURES.md", "RELEASE_NOTES.md", "docs/USER_MANUAL.md", "docs/TROUBLESHOOTING_GUIDE.md")
        foreach ($doc in $required_docs) {
          if (-not (Test-Path $doc)) {
            echo "エラー: 必須ドキュメント $doc が見つかりません"
            exit 1
          }
        }

        # RELEASE_NOTES.mdに現在のバージョンが記載されているかチェック
        $release_notes_content = Get-Content RELEASE_NOTES.md -Raw
        if ($release_notes_content -notmatch "## \[?バージョン $version\]?") {
          echo "エラー: RELEASE_NOTES.mdにバージョン $version の記載がありません"
          exit 1
        }

        echo "ドキュメント整合性チェック完了"
      shell: pwsh

    - name: Run tests
      run: |
        pytest tests/ --cov=src --cov-report=xml

    - name: Build executable
      run: |
        pyinstaller --onefile --windowed --name AI_reStarter main.py

    - name: Create release package
      run: |
        mkdir release
        copy dist\AI_reStarter.exe release\
        copy README.md release\
        copy kiro_config.json release\
        xcopy error_templates release\error_templates\ /E /I
        xcopy amazonq_templates release\amazonq_templates\ /E /I
        powershell Compress-Archive -Path release\* -DestinationPath AI_reStarter-${{ github.ref_name }}.zip

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: AI reStarter ${{ github.ref_name }}
        body: |
          ## 🎉 AI reStarter ${{ github.ref_name }}

          ### 📦 ダウンロード
          - Windows実行ファイル: AI_reStarter-${{ github.ref_name }}.zip

          ### 🚀 インストール方法
          1. ZIPファイルをダウンロード・解凍
          2. AI_reStarter.exeを実行

          ### 📋 変更内容
          詳細は[RELEASE_NOTES.md](RELEASE_NOTES.md)を参照
        files: |
          AI_reStarter-${{ github.ref_name }}.zip
        draft: false
        prerelease: false
