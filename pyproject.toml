[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-restarter"
version = "0.2.1"
description = "AI reStarter - AI統合IDE用自動復旧システム"
authors = [{name = "Kiro Development Team"}]
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}


keywords = ["ai", "restarter", "amazonq", "auto-recovery", "screen-capture", "error-detection", "template-matching"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "opencv-python>=4.8.0",
    "numpy>=1.26.0",
    "pyautogui>=0.9.54",
    "Pillow>=10.0.0",
    "keyboard>=0.13.5",
    "pywin32>=306; sys_platform == 'win32'",
    "pyperclip>=1.8.2",

]

[project.optional-dependencies]
dev = [
    "black>=24.1.0",
    "flake8>=7.0.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "pylint>=3.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.6.0",
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "types-Pillow>=10.0.0",
    "memory-profiler>=0.61.0",
]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
]
docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=2.0.0",
    "ipython>=8.21.0",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["kiro_auto_recovery"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "-v"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
markers = [
    "unit: 単体テスト用のマーカー",
    "integration: 統合テスト用のマーカー",
    "gui: GUIテスト用のマーカー",
    "slow: 実行時間が長いテスト用のマーカー"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/archive/*",
    "*/htmlcov/*",
    "*/.mypy_cache/*",
    "*/.ruff_cache/*"
]

[tool.setuptools]
py-modules = ["kiro_auto_recovery", "kiro_setup"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
